@model IEnumerable<RAAST_web.Models.Boat_Info>


@{
    ViewBag.Title = "Boat information";
    Layout = "~/Views/defaultNavLayout.cshtml";
}
<!DOCTYPE html>
<html>
<head>
    <title>Boat information</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
          integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
          crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
            integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
            crossorigin="">
    </script>
    @section head{
        <style type="text/css">
            body {
                background-image: url('/images/back9.png');
                background-repeat: no-repeat;
                background-size: cover;
            }
        </style>
    }
</head>
<body>
    <br />
    <br />
    <br />
    <br />
    <br />
    <div class="container">
        <div id="map" style="height:400px;" allowfullscreen="">

        </div>
    </div>
    <section class="t2t-blokken">
        <div class="py-5" id="blokqx">
            <div class="container py-lg-5">
                <div class="title-content text-center mb-5">
                    <h6 class="sub-title">Lorem illum facere</h6>
                    <h3 class="hny-title">Boat information</h3>
                    <p class="fea-para">Lorem illum facere aperiam consectetur adipisicing elit</p>
                </div>
                <div class="row t-in">
                    <div class="col-lg-4 col-md-6 blokq-main-info">
                        <div class="blokq-inner card box-shadow">

                            <div class="card-body">
                                <h4 class="text-uppercase text-center mb-3">Speed</h4>
                                <h5 class="card-title blokqx-card-title">
                                    @Html.DisplayFor(model => Model.ToList()[Model.ToList().Count - 1].boat_Speed)<span class="align-top">km/h</span>

                                </h5>
                                <ul class="list-unstyled mt-3 mb-4">
                                    <li> This is the current speed of the boat.</li>
                                    <li> An updated view is shown atleast every half hour.</li>
                                </ul>
                            </div>
                        </div>
                    </div>


                    <div class="col-lg-4 col-md-6 blokq-main-info mt-lg-0 mt-4">
                        <div class="blokq-inner card box-shadow">

                            <div class="card-body">
                                <h4 class="text-uppercase text-center mb-3">Temperature</h4>
                                <h5 class="card-title blokqx-card-title">
                                    @Html.DisplayFor(model => Model.ToList()[Model.ToList().Count - 1].temperature)<span class="align-top">°C</span>
                                </h5>
                                <ul class="list-unstyled mt-3 mb-4">
                                    <li> This is the current temperature surrounding the boat.</li>
                                    <li> An updated view is shown atleast every half hour.</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4 col-md-6 blokq-main-info mt-lg-0 mt-4">
                        <div class="blokq-inner card box-shadow">

                            <div class="card-body">
                                <h4 class="text-uppercase text-center mb-3">Wind Speed</h4>
                                <h5 class="card-title blokqx-card-title">
                                    @Html.DisplayFor(model => Model.ToList()[Model.ToList().Count - 1].wind_Speed)<span class="align-top">km/h</span>
                                </h5>
                                <ul class="list-unstyled mt-3 mb-4">
                                    <li> This is the current wind speed facing the boat.</li>
                                    <li> An updated view is shown atleast every half hour.</li>
                                </ul>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-4 col-md-6 blokq-main-info mt-lg-0 mt-4">
                        <div class="blokq-inner card box-shadow">
                            <div class="card-body">
                                <h4 class="text-uppercase text-center mb-3">Wind Direction</h4>
                                <h5 class="card-title blokqx-card-title">
                                    @Html.DisplayFor(model => Model.ToList()[Model.ToList().Count - 1].wind_Direction)<span class="align-top">°</span>
                                </h5>
                                <ul class="list-unstyled mt-3 mb-4">
                                    <li> This is the current wind direction facing the boat.</li>
                                    <li> An updated view is shown atleast every half hour.</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- JavaScript rules for navigation settings -->
    <script src="~/js/jquery-3.3.1.min.js"></script>
    <script>
        $(function () {
            $('.navbar-toggler').click(function () {
                $('body').toggleClass('noscroll');
            })
        });
    </script>
    <script>
        $(window).on("scroll", function () {
            var scroll = $(window).scrollTop();

            if (scroll >= 80) {
                $("#site-header").addClass("nav-fixed");
            } else {
                $("#site-header").removeClass("nav-fixed");
            }
        });

        $(".navbar-toggler").on("click", function () {
            $("header").toggleClass("active");
        });
        $(document).on("ready", function () {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
            $(window).on("resize", function () {
                if ($(window).width() > 991) {
                    $("header").removeClass("active");
                }
            });
        });
    </script>
    <script src="~/js/bootstrap.min.js"></script>
    <script>

        //sets up leaflet map
        var map = L.map('map').setView([51.91045640625668, 4.450265871598626], 13);

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);

            L.marker([51.91045640625668, 4.450265871598626]).addTo(map)
                .bindPopup('Home sweet home')
                .openPopup();
           //converts model to js model
            var model2 = @Html.Raw(Json.Encode(Model));

        //pointlist for coordinates
        var pointlist = [];

        //info per pointer
        for (var i = 0; i < model2.length; i++)
        {
            L.marker([model2[i].longitude, model2[i].latitude]).addTo(map)
                .bindPopup('Speed = ' + model2[i].boat_Speed.toString() + 'km\h' +
                '<br>Temperature = ' + model2[i].temperature.toString() + '°C' +
                '<br>Windspeed = ' + model2[i].wind_Speed.toString() + 'km/n' +
                '<br>Winddirection = ' + model2[i].wind_Direction.toString() + '°')

            //add point to map
            pointlist.push([model2[i].longitude, model2[i].latitude]);

        }

        //draw line between points
        var firstpolyline = new L.Polyline(pointlist, {
            color: 'red',
            weight: 3,
            opacity: 0.5,
            smoothFactor: 1
        });
        firstpolyline.addTo(map);

    </script>


</body>
</html>