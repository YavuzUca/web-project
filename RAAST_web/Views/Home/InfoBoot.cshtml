@model IEnumerable<RAAST_web.Models.Boat_Info>


@{
    ViewBag.Title = "Boat information";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Informatie about the boat.</title>
    <link href="~/css/style.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
          integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
          crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
            integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
            crossorigin="">
    </script>
    <script>

        //sets up leaflet map
        var map = L.map('map').setView([51.91045640625668, 4.450265871598626], 13);

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);

            L.marker([51.91045640625668, 4.450265871598626]).addTo(map)
                .bindPopup('Home sweet home')
                .openPopup();
           //converts model to js model
            var model2 = @Html.Raw(Json.Encode(Model));

        //pointlist for coordinates
        var pointlist = [];

        //info per pointer
        for (var i = 0; i < model2.length; i++)
        {
            L.marker([model2[i].longitude, model2[i].latitude]).addTo(map)
                .bindPopup('Speed = ' + model2[i].boat_Speed.toString() + 'km\h' +
                '<br>Temperature = ' + model2[i].temperature.toString() + '°C' +
                '<br>Windspeed = ' + model2[i].wind_Speed.toString() + 'km/n' +
                '<br>Winddirection = ' + model2[i].wind_Direction.toString() + '°')

            //add point to map
            pointlist.push([model2[i].longitude, model2[i].latitude]);

        }

        //draw line between points
        var firstpolyline = new L.Polyline(pointlist, {
            color: 'red',
            weight: 3,
            opacity: 0.5,
            smoothFactor: 1
        });
        firstpolyline.addTo(map);

    </script>
</head>
<body>
    <div class="container">
        <h2>@ViewBag.Title</h2>
        <h3>@ViewBag.Message</h3>
        <h4>@ViewBag.Counter</h4>
        <div id="map" style="height:400px;">

        </div>
    </div>
    <div class="container">

        <h2>Information about the modules</h2>

        <div class="col-lg-5 moduleStyle">
            <div class="headerDiv">
                <h3 class="centeredWhite ct">Speed</h3>
            </div>

            <p class="centeredWhite">This is the current speed of the boat</p>
            <div class="centeredWhite">

                @Html.DisplayFor(model => Model.ToList()[Model.ToList().Count - 1].boat_Speed) km/h
                
            </div>
        </div>



        <div class="col-lg-offset-2 col-lg-5 moduleStyle">
            <div class="headerDiv">
                <h3 class="centeredWhite ct">Windspeed</h3>
            </div>

            <p class="centeredWhite">This is the current windspeed </p>
            <div class="centeredWhite">

                @Html.DisplayFor(model => Model.ToList()[Model.ToList().Count -1].wind_Speed) km/h
            </div>

        </div>

        <div class="col-lg-5 moduleStyle">
            <div class="headerDiv">
                <h3 class="centeredWhite ct">Temperature</h3>
            </div>

            <p class="centeredWhite">This is the current temperature</p>
            <div class="centeredWhite">

                @Html.DisplayFor(model => Model.ToList()[Model.ToList().Count - 1].temperature) °C
            </div>
        </div>
        <div class="col-lg-offset-2 col-lg-5 moduleStyle">
            <div class="headerDiv">
                <h3 class="centeredWhite ct">Winddirection</h3>
            </div>

            <p class="centeredWhite">This is the current direction of the wind</p>
            <div class="centeredWhite">

                @Html.DisplayFor(model => Model.ToList()[Model.ToList().Count - 1].wind_Direction)°
            </div>
        </div>
    </div>
</body>
</html>
